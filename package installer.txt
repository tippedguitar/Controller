package com.example.trialexam;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.view.View;
import android.widget.Button;

import android.os.Bundle;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button b1 = findViewById(R.id.alert1);
        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showAlert();
            }
        });
    }
    private void showAlert(){
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Alert 1").setMessage("This is the alert message").show();
    }
}

-------------------------------------------------------------------

import React,{useState} from "react";
import {View, Text, TextInput, Button, StyleSheet} from "react-native";

const app = () =>{
    const [red1, setred] = useState("");
    const [blue1, setblue] = useState("");
    const col1 = () =>{
        setred("red1");
        setblue("");
    }
    const col2 = () =>{
        setred("");
        setblue("blue1");
        
    }

    return(
        <View>
            <Text>Choose Color from the below</Text>
            <Button title="Red" onPress={col1}/>
            <Button title="Blue" onPress={col2}/>
            {red1?(
                <Text style={styles.RED}>This text is changing colour.</Text>
            ): null}
            {blue1?(
                <Text style={styles.BLUE}>This text is changing colour.</Text>
            ): null}
        </View>
    )
};
const styles = StyleSheet.create({
    RED:{
        color: "red",
    },
    BLUE: {
        color: "blue",
    },
});

export default app;

----------------------------------------------------------------------------------
import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { View, Text, Button, StyleSheet } from 'react-native';

const Stack = createStackNavigator();

const HomeScreen = ({ navigation }) => {
  const goToDetails = () => {
    navigation.navigate('DetailsScreen');
  };

  return (
    <View style={styles.container}>
      <Text>Welcome to Home Screen!</Text>
      <Button title="Go to Details" onPress={goToDetails} />
    </View>
  );
};

const DetailsScreen = () => {
  return (
    <View style={styles.container}>
      <Text>This is the Details Screen!</Text>
    </View>
  );
};

const App = () => {
  return (
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen name="HomeScreen" component={HomeScreen} />
        <Stack.Screen name="DetailsScreen" component={DetailsScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
});

export default App;

----------------------------------
npm install app-proj1
-----------------------------------
cordova plugin add cordova-plugin-geolocation

cordova plugin add cordova-plugin-android-permissions
------------------------------------
import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';

const TodoApp = () => {
  const [task, setTask] = useState('');
  const [tasks, setTasks] = useState([]);

  const addTask = () => {
    if (task.trim() !== '') {
      setTasks([...tasks, { id: Date.now(), text: task, completed: false }]);
      setTask('');
    }
  };

  const toggleTask = (taskId) => {
    setTasks((prevTasks) =>
      prevTasks.map((t) =>
        t.id === taskId ? { ...t, completed: !t.completed } : t
      )
    );
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Todo App</Text>
      <TextInput
        placeholder="Add a new task"
        value={task}
        onChangeText={(text) => setTask(text)}
        style={styles.input}
      />
      <TouchableOpacity onPress={addTask} style={styles.addButton}>
        <Text style={styles.buttonText}>Add Task</Text>
      </TouchableOpacity>

      {tasks.map((todo) => (
        <View key={todo.id} style={styles.taskContainer}>
          <TouchableOpacity onPress={() => toggleTask(todo.id)}>
            <Text style={todo.completed ? styles.completedText : styles.taskText}>
              {todo.text}
            </Text>
          </TouchableOpacity>
        </View>
      ))}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    alignItems: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    width: '80%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 20,
    paddingHorizontal: 10,
  },
  addButton: {
    backgroundColor: 'blue',
    padding: 10,
    borderRadius: 5,
  },
  buttonText: {
    color: 'white',
    textAlign: 'center',
  },
  taskContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
  },
  taskText: {
    fontSize: 18,
  },
  completedText: {
    fontSize: 18,
    textDecorationLine: 'line-through',
    color: 'gray',
  },
});

export default TodoApp;
----------------------------------------------
npx create-expo-app AwesomeProject

cd AwesomeProject
npx expo start
---------------------------------------
For navigation in react-native,
in project directory run:
npm install @react-navigation/native  @react-navigation/native-stack  react-native-screens  react-native-safe-area-context
---------------------------------------
cordova create hello com.example.hello HelloWorld
cordova platform add android
cordova requirements
cordova build
cordova run android
-------------------------------------
import React, { useState } from 'react';
import { Alert, Button, StyleSheet, Text, TextInput, View } from 'react-native';
const LoginPage = () => {
const [username, setUsername] = useState('');
const [password, setPassword] = useState('');
const handleLogin = () => {
  if (username === 'user' && password === 'password') {
    Alert.alert('Login Successful', 'Welcome back, User!');
} else {
Alert.alert('Login Failed', 'Invalid username or password. Please try again.');
}
};
return (
<View style={styles.container}>
<Text style={styles.title}>Login</Text>
<TextInput style={styles.input} placeholder="Username" onChangeText={(text) => setUsername(text)} value={username}
/>
<TextInput
style={styles.input} placeholder="Password" secureTextEntry onChangeText={(text) => setPassword(text)} value={password}
/>
<Button
title="Login" onPress={handleLogin}
/>
</View>
);
};
const styles = StyleSheet.create({
container: {
flex: 1, justifyContent: 'center', alignItems: 'center', padding: 16,
}, title: {
fontSize: 24, marginBottom: 16,
},
input: {
height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 16, padding: 8, width: '100%',
},
});
export default LoginPage;
---------------------------------
import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet } from 'react-native';

const IncomeExpenseCalculator = () => {
  const [income, setIncome] = useState('');
  const [expense, setExpense] = useState('');
  const [totalExpense, setTotalExpense] = useState(0);
  const [remainingIncome, setRemainingIncome] = useState(0);

  const addExpense = () => {
    if (expense) {
      const expenseAmount = parseFloat(expense);
      setTotalExpense(totalExpense + expenseAmount);
      setExpense('');
    }
  };

  const calculateRemainingIncome = () => {
    if (income) {
      const incomeAmount = parseFloat(income);
      const remaining = incomeAmount - totalExpense;
      setRemainingIncome(remaining);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Expense Calculator</Text>

      <TextInput
        style={styles.input}
        placeholder="Enter income"
        keyboardType="numeric"
        value={income}
        onChangeText={(text) => setIncome(text)}
      />

      <TextInput
        style={styles.input}
        placeholder="Enter expense"
        keyboardType="numeric"
        value={expense}
        onChangeText={(text) => setExpense(text)}
      />
      <Button style={styles.button} title="Add Expense" onPress={addExpense} />
  

      <Button style={styles.button} title="Calculate Remaining Income" onPress={calculateRemainingIncome} />

      <Text style={styles.resultText}>
        Total Expense: ₹{totalExpense.toFixed(2)}
      </Text>

      <Text style={styles.resultText}>
        Remaining Income: ₹{remainingIncome.toFixed(2)}
      </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    alignItems: 'center',
    justifyContent: 'center',
    
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  button: {
    backgroundColor: 'red',
  },
  input: {
    marginBottom: 10,
    borderWidth: 1,
    padding: 10,
    width: '100%',
    fontSize: 20,
  },
  expenseInputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  resultText: {
    fontSize: 20,
    fontWeight: 'bold',
    marginTop: 20,
  },
});

export default IncomeExpenseCalculator;
------------------------------------
import React, { useState } from 'react';
import { Button, StyleSheet, Text, TextInput, View } from 'react-native';

const UnitConverterApp = () => {
  const [km, setKm] = useState('');
  const [miles, setMiles] = useState('');
  const [kg, setKg] = useState('');
  const [pounds, setPounds] = useState('');

  const convertKmToMiles = () => {
    const milesValue = parseFloat(km) * 0.621371;
    setMiles(milesValue.toFixed(2));
  };

  const convertKgToPounds = () => {
    const poundsValue = parseFloat(kg) * 2.20462;
    setPounds(poundsValue.toFixed(2));
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Unit Converter</Text>

      <View style={styles.converterContainer}>
        <Text style={styles.label}>Kilometers to Miles</Text>
        <TextInput
          style={styles.input}
          placeholder="Enter kilometers"
          keyboardType="numeric"
          value={km}
          onChangeText={(text) => setKm(text)}
        />
        <Button title="Convert" onPress={convertKmToMiles} />
        <Text style={styles.result}>{miles} miles</Text>
      </View>

      <View style={styles.converterContainer}>
        <Text style={styles.label}>Kilograms to Pounds</Text>
        <TextInput
          style={styles.input}
          placeholder="Enter kilograms"
          keyboardType="numeric"
          value={kg}
          onChangeText={(text) => setKg(text)}
        />
        <Button title="Convert" onPress={convertKgToPounds} />
        <Text style={styles.result}>{pounds} pounds</Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  converterContainer: {
    marginBottom: 20,
    width: '80%',
  },
  label: {
    fontSize: 18,
    marginBottom: 10,
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    paddingHorizontal: 10,
    marginBottom: 10,
  },
  result: {
    marginTop: 10,
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default UnitConverterApp;

---------------------------------
import React, { useState } from 'react';
import { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';

const App = () => {
  const [weight, setWeight] = useState('');
  const [height, setHeight] = useState('');
  const [bmiResult, setBmiResult] = useState('');
  const [bmiCategory, setBmiCategory] = useState('');

  const calculateBMI = () => {
    if (weight && height) {
      const weightInKg = parseFloat(weight);
      const heightInMeters = parseFloat(height) / 100;
      const bmi = weightInKg / (heightInMeters * heightInMeters);
      setBmiResult(bmi.toFixed(2));

      let bmiCategory = '';
      if (bmi < 18.5) {
        bmiCategory = 'Underweight';
      } else if (bmi >= 18.5 && bmi < 24.9) {
        bmiCategory = 'Fit (Normal Weight)';
      } else if (bmi >= 25 && bmi < 29.9) {
        bmiCategory = 'Overweight';
      } else {
        bmiCategory = 'Obese';
      }

      setBmiCategory(bmiCategory);
    } else {
      setBmiResult('Please enter weight and height.');
      setBmiCategory('');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>BMI Calculator</Text>

      <TextInput
        style={styles.input}
        placeholder="Weight (kg)"
        value={weight}
        onChangeText={setWeight}
        keyboardType="numeric"
      />

      <TextInput
        style={styles.input}
        placeholder="Height (cm)"
        value={height}
        onChangeText={setHeight}
        keyboardType="numeric"
      />

      <TouchableOpacity style={styles.calculateButton} onPress={calculateBMI}>
        <Text style={styles.calculateButtonText}>Calculate BMI</Text>
      </TouchableOpacity>

      {bmiResult !== '' && (
        <View>
          <Text style={styles.resultText}>Your BMI: {bmiResult}</Text>
          <Text style={styles.resultText}>Category: {bmiCategory}</Text>
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    width: '80%',
    height: 50,
    borderColor: 'gray',
    borderWidth: 1,
    borderRadius: 5,
    paddingHorizontal: 10,
    marginBottom: 15,
    fontSize: 18,
  },
  calculateButton: {
    backgroundColor: 'blue',
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 5,
    marginBottom: 15,
  },
  calculateButtonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold',
  },
  resultText: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 5,
  },
});

export default App;
---------------------------------------
//java 
import android.graphics.Color; 
import android.os.Bundle; 
import android.support.v7.app.AppCompatActivity; import android.view.View; 
import android.widget.Button; 
import android.widget.TextView; 
public class MainActivity extends AppCompatActivity { private TextView textView;
@Override protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);
// Find the TextView by its ID textView = findViewById(R.id.textView);
// Find the Button by its ID
Button changeColorButton = findViewById(R.id.changeColorButton);
// Set an OnClickListener for the button changeColorButton.setOnClickListener(new View.OnClickListener() {
@Override public void onClick(View v) { // Change the text color to red textView.setTextColor(Color.RED);
}
});
}
}

//xml
<!-- res/layout/activity_main.xml -->
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" android:paddingLeft="16dp" android:paddingTop="16dp" android:paddingRight="16dp" android:paddingBottom="16dp" tools:context=".MainActivity">
<TextView android:id="@+id/textView" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Hello, World!" android:textSize="20sp" android:layout_centerHorizontal="true" android:layout_marginBottom="20dp"/>
<Button android:id="@+id/changeColorButton" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Change Color" android:layout_below="@id/textView" android:layout_centerHorizontal="true"/>
</RelativeLayout>
------------------------------------
import React, { useState } from 'react';
import { View, Text, Button, FlatList, StyleSheet } from 'react-native';
import DateTimePicker from '@react-native-community/datetimepicker';

const App = () => {
  const [expenses, setExpenses] = useState([]);
  const [showDatePicker, setShowDatePicker] = useState(false);
  const [selectedDate, setSelectedDate] = useState(new Date());

  const addExpense = () => {
    const newExpense = {
      date: selectedDate.toLocaleDateString(),
      amount: Math.floor(Math.random() * 100),
    };

    setExpenses([...expenses, newExpense]);
  };

  const renderExpenseItem = ({ item }) => (
    <View style={styles.expenseItem}>
      <Text>{item.date}</Text>
      <Text>${item.amount}</Text>
    </View>
  );

  const handleDateChange = (event, selectedDate) => {
    setShowDatePicker(false);
    if (selectedDate) {
      setSelectedDate(selectedDate);
    }
  };

  return (
    <View style={styles.container}>
      <Button title="Add Expense" onPress={() => setShowDatePicker(true)} />
      <FlatList
        data={expenses}
        keyExtractor={(item, index) => index.toString()}
        renderItem={renderExpenseItem}
      />
      {showDatePicker && (
        <DateTimePicker
          value={selectedDate}
          mode="date"
          display="default"
          onChange={handleDateChange}
        />
      )}
      <Button title="Add Expense" onPress={addExpense} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
  },
  expenseItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingVertical: 8,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
});

export default App;
-----------------------------------------
